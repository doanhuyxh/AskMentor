@model List<Libs.Entity.Room>
@inject AskMentor.Helper.Helper _helper;

@section Styles {
    <link rel="stylesheet" href="/assets/css/style.css">


}

<section style="margin-bottom:20em; margin-top:8em;" class="d-flex justify-content-around">

    <div style="width:30%">
        <p class="text-center text-dark fs-5">Lịch sử trò chuyện</p>
        <div class="list-group">
            @if (Model.Count > 0)
            {
                @foreach (Libs.Entity.Room room in Model)
                {
                    <a class="list-group-item list-group-item-action">
                        <div class="d-flex w-100 justify-content-between" onclick="ChoseUser('@room.UserId1', '@room.UserId2')">
                            <h5 class="mb-1">
                                @if (ViewBag.userId == room.UserId1)
                                {
                                    @await _helper.GetNameUserById(room.UserId1)
                                }
                                else
                                {
                                    @await _helper.GetNameUserById(room.UserId2)
                                }
                            </h5>
                        </div>

                    </a>

                }}
        </div>
    </div>

    <div style="width:60%">

        <div class="d-none" id="chat-container" style="width:100%">

            <div class="rounded-pill border-1 border border-primary p-2">
                <div>
                    <h2 class="text-black fs-5 text-center" id="nameMentor"></h2>
                </div>
            </div>
            <div class="mt-2">
                <ul class="list-group" id="content_chat">
                </ul>
            </div>

            <div>
                <div class="my-2">
                    <input class="form-control" placeholder="input here" id="input_chat" />
                </div>
            </div>

        </div>
    </div>
</section>

<script src="/js/site.js"></script>
<script>
    "use strict";

    var RoomId = 0;
    var toId = "";
    var FromId = '@Html.Raw(ViewBag.userId)'


    console.log(FromId);

    function ChoseUser(userId1, userId2) {


        connection.invoke("JoinRom", userId1, userId2).
            then(data => {
                $("#chat-container").removeClass("d-none")
                $("#nameMentor").text("123123")
            })
            .catch(function (err) {

                setTimeout(() => {
                    connection.invoke("JoinRom", userId1, userId2)
                }, 2000)

                return console.error(err.toString());
            });
    }


</script>
